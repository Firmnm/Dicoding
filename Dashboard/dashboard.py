# -*- coding: utf-8 -*-
"""Dashboard

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZSbhKJpyYuijVNpZoj-kbMj2qf3Ad1D7
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import streamlit as st
sns.set(style='dark')

def create_daily_rentals_df(df):
    daily_rentals_df = df.resample(rule='D', on='dteday').agg({
        "registered": "sum",
        "casual": "sum",
        "cnt": "sum"
    })
    daily_rentals_df = daily_rentals_df.reset_index()
    daily_rentals_df.rename(columns={
        "registered": "total_registered",
        "casual": "total_casual",
        "cnt": "total_customer"
    }, inplace=True)

    return daily_rentals_df

def create_monthly_rentals_df(df):
    monthly_rentals_df = df.resample(rule='M', on='dteday').agg({
        "registered": "sum",
        "casual": "sum",
        "cnt": "sum"
    })
    monthly_rentals_df = monthly_rentals_df.reset_index()
    monthly_rentals_df.rename(columns={
        "registered": "total_registered",
        "casual": "total_casual",
        "cnt": "total_customer"
    }, inplace=True)

    return monthly_rentals_df

def create_byhour_df(df):
    byhour_df = df.groupby(by="hr").cnt.sum().reset_index()
    byhour_df.rename(columns={
        "cnt": "total_customer"
    }, inplace=True)

    return byhour_df

def create_byseasons_df(df):
    byseason_df = df.groupby(by="season").cnt.sum().reset_index()
    byseason_df.rename(columns={
        "cnt": "total_customer"
    }, inplace=True)

    return byseason_df

def create_byweather_df(df):
    byweather_df = df.groupby(by="weathersit").cnt.sum().reset_index()
    byweather_df.rename(columns={
        "cnt": "total_customer"
    }, inplace=True)

    return byweather_df

def create_clustering(df):
    clustering = df.groupby(['weekday', 'hr'])['cnt'].sum().unstack()

    return clustering

all_df = pd.read_csv("https://raw.githubusercontent.com/Firmnm/Dicoding/main/main_data.csv")

datetime_columns = ["dteday"]
all_df.sort_values(by="dteday", inplace=True)
all_df.reset_index(drop=True, inplace=True)

for column in datetime_columns:
    all_df[column] = pd.to_datetime(all_df[column])

min_date = all_df["dteday"].min()
max_date = all_df["dteday"].max()

with st.sidebar:
    st.image("https://raw.githubusercontent.com/Firmnm/Dicoding/main/logo.png")

    start_date, end_date = st.date_input(
        label='Rentang Waktu', min_value=min_date,
        max_value=max_date,
        value=[min_date, max_date]
    )

main_df = all_df[(all_df["dteday"] >= str(start_date)) &
                (all_df["dteday"] <= str(end_date))]

byhour_df = create_byhour_df(main_df)
daily_rentals_df = create_daily_rentals_df(main_df)
monthly_rentals_df = create_monthly_rentals_df(main_df)
byseason_df = create_byseasons_df(main_df)
byweather_df = create_byweather_df(main_df)
clustering = create_clustering(main_df)

st.header('Bike Sharing Dashboard ğŸš²')

st.subheader('Daily Rentals')

col1, col2, col3 = st.columns(3)

with col1:
    total_rentals = daily_rentals_df.total_customer.sum()
    st.metric("Total Rentals", value=total_rentals)

with col2:
    total_registered = daily_rentals_df.total_registered.sum()
    st.metric("Total Registered Customer", value=total_registered)

with col3:
    total_casual = daily_rentals_df.total_casual.sum()
    st.metric("Total Casual Customer", value=total_casual)

st.subheader('Monthly Rentals')
fig, ax = plt.subplots(figsize=(16, 8))
ax.plot(
    monthly_rentals_df["dteday"],
    monthly_rentals_df["total_customer"],
    marker='o',
    linewidth=2,
    color="skyblue"
)
ax.set_xlabel("Month", fontsize=15)
ax.set_ylabel("Total Customers", fontsize=15)
ax.set_title("Monthly Rentals (Total Customers)", fontsize=20)
ax.tick_params(axis='y', labelsize=12)
ax.tick_params(axis='x', labelsize=12)
ax.grid(True)

st.pyplot(fig)

season_colors = {
    'Winter': 'lightskyblue',
    'Spring': 'lightgreen',
    'Summer': 'gold',
    'Fall': 'lightcoral'
}

weather_colors = {
    'Clear':'gold',
    'Cloudy':'lightskyblue',
    'Light Snow/Rain':'grey',
    'Heavy Rain/Ice Pallets':'darkblue'
}

st.subheader("Rental Patterns")

col1, col2 = st.columns(2)

with col1:
    fig, ax = plt.subplots(figsize=(10, 6))
    sns.barplot(
        y='total_customer',
        x='season',
        data=byseason_df.sort_values(by='total_customer', ascending=False),
        palette=season_colors,
        ax=ax
    )
    ax.set_title("Customer based on Season", loc="center", fontsize=20, pad=20)
    ax.set_ylabel("Total Customers")
    ax.set_xlabel("Season")
    st.pyplot(fig)

with col2:
    fig, ax = plt.subplots(figsize=(10, 6))
    sns.barplot(
        y='total_customer',
        x='weathersit',
        data=byweather_df.sort_values(by='total_customer', ascending=False),
        palette=weather_colors,
        ax=ax
    )
    ax.set_title("Customer based on Weather", loc="center", fontsize=20, pad=20)
    ax.set_ylabel("Total Customers")
    ax.set_xlabel("Weather Situation")
    st.pyplot(fig)

st.subheader("Customer based on Hour")
fig, ax = plt.subplots(figsize=(10, 6))
ax.bar(byhour_df['hr'], byhour_df['total_customer'], color='skyblue', edgecolor='none')
ax.set_title('Total Bike Rentals by Hour of the Day', fontsize=15)
ax.set_xlabel('Hour', fontsize=12)
ax.set_ylabel('Total Customers', fontsize=12)
ax.set_xticks(range(0, 24, 2))
ax.grid(axis='y', linestyle='--', alpha=0.7)
st.pyplot(fig)

st.subheader("Rental Distribution by Hour and Weekday")
pivot_df = main_df.pivot_table(index='hr', columns='weekday', values='cnt', aggfunc='sum')
fig, ax = plt.subplots(figsize=(10, 6))
pivot_df.plot(kind='bar', stacked=True, ax=ax, colormap='tab20')
ax.set_xlabel('Hour', fontsize=12)
ax.set_ylabel('Total Rentals', fontsize=12)
ax.set_title('Stacked Bar Chart of Total Rentals by Hour and Weekday', fontsize=15)
ax.legend(title='Weekday', bbox_to_anchor=(1.05, 1), loc='upper left')
ax.tick_params(axis='x', rotation=0)
st.pyplot(fig)

st.subheader("Total Bike Rentals by Customer Type")
fig, ax = plt.subplots(figsize=(10, 6))
total_customers = [monthly_rentals_df['total_registered'].sum(), monthly_rentals_df['total_casual'].sum()]
ax.bar(['Registered Rentals', 'Casual Rentals'], total_customers, color=['skyblue', 'pink'])
ax.set_title('Total Bike Rentals for Registered and Casual Customers', fontsize=15)
ax.set_ylabel('Total Customers', fontsize=12)
st.pyplot(fig)

fig, ax = plt.subplots(figsize=(8, 8))
sizes = [daily_rentals_df['total_registered'].sum(), daily_rentals_df['total_casual'].sum()]
labels = ['Registered', 'Casual']
ax.pie(sizes, labels=labels, colors=['skyblue', 'gold'], autopct='%1.1f%%', startangle=140, pctdistance=0.85, textprops={'fontsize': 12})
ax.axis('equal')
ax.set_title("Percentage of Registered vs Casual Customer", fontsize=15)
st.pyplot(fig)

st.caption('Copyright Â© firmnnm 2024')